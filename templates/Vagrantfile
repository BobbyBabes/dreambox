# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative 'class_config.rb'

dreambox_config_file = (defined?(config_file)) ? config_file : 'vm-config.yml'

Dreambox = Config.new(dreambox_config_file)

Vagrant.configure(2) do |config|
  # Start bash as a non-login shell
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  # TODO See synced_folder line
  $user_vars["DREAMBOX_UID"] = 31415

  # TODO We're going to listen for a user _after_ `ssh` instead
  # TODO We need to check for multimachine so shit doesn't break
  #     (config.vm.defined_vm_keys.length > 1)
  if VAGRANT_COMMAND == "ssh"
    config.ssh.username = $user_vars['DREAMBOX_USER_NAME']
  end

  config.vm.provision "PHP Install",
    type: "shell",
    inline: "/bin/bash /user/local/dreambox/php.sh",
    :env => Dreambox.config

  if Dreambox.config['ssl_enabled'] then
    config.vm.provision "SSL Setup",
      type: "shell",
      inline: "/bin/bash /user/local/dreambox/ssl.sh",
      :env => Dreambox.config
  end

  # TODO Change this to .each_value
  Dreambox.config['sites'].each do |site, conf|
    config.vm.provision "User Setup: #{conf['user']}",
      type: "shell",
      inline: "/bin/bash /user/local/dreambox/user.sh",
      :env => conf

    if (! conf['is_subdomain']) then
      # Sets up the sync folder
      config.vm.synced_folder conf['local_root'], conf['root_path'],
        # TODO Generate the UID, pass it to `user_setup` with conf
        owner: $user_vars["DREAMBOX_UID"],
        group: "www-data",
        mount_options: ["dmode=775,fmode=664"]
    end

    config.vm.provision "VHost Setup: #{conf['host']}",
      type: "shell",
      inline: "/bin/bash /user/local/dreambox/vhost.sh",
      :env => conf
  end
end
