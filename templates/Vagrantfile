# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative 'class_config.rb'

dreambox_config_file = (defined?(config_file)) ? config_file : 'vm-config.yml'
dns_hosts_file = File.join(File.dirname(__FILE__), 'dns_hosts.txt')

Dreambox = Config.new(dreambox_config_file, dns_hosts_file)
VAGRANT_COMMAND = ARGV[0]

Vagrant.configure(2) do |config|
  # Start bash as a non-login shell
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  # TODO See synced_folder line
  $user_vars["DREAMBOX_UID"] = 31415

  # TODO We're going to listen for a user _after_ `ssh` instead
  # TODO We need to check for multimachine so shit doesn't break
  #     (config.vm.defined_vm_keys.length > 1)
  if VAGRANT_COMMAND == "ssh"
    config.ssh.username = $user_vars['DREAMBOX_USER_NAME']
  end

  # Install PHP
  config.vm.provision "shell",
    inline: "/bin/bash /usr/local/bin/php_install",
    :env => Dreambox.config['box']

  if Dreambox.config['ssl_enabled'] then
    config.vm.provision "shell",
      inline: "/bin/bash /usr/local/bin/ssl_setup",
      :env => Dreambox.config
  end

  Dreambox.config['sites'].each do |site, conf|
    if (! conf['is_subdomain']) then
      # Sets up the sync folder
      config.vm.synced_folder conf['local_root'], conf['root_path']
        # TODO Generate the UID, pass it to `user_setup` with conf
        owner: $user_vars["DREAMBOX_UID"],
        group: "www-data",
        mount_options: ["dmode=775,fmode=664"]
    end
    # Runs user_setup
    config.vm.provision "shell",
      inline: "/bin/bash /usr/local/bin/user_setup",
      :env => conf
  end
end
