#!/bin/bash

trap "clean_and_exit" TERM INT

# Ensure the script is run as SU
if [ "$(whoami)" != "root" ]; then
  echo
  echo "x ... failed! Rerun as root (sudo user_setup)";
  echo
  exit 1
fi

# Base for user directory
USER_DIR="/home"
# httpd-vhost.conf values; original and backup
VHOST_CONF="/usr/local/apache2/conf/extra/httpd-vhosts.conf"
BAK_FILE="/tmp/httpd-vhosts.conf_original"
# Unless otherwise specified, project files will be found in `web`
DEFAULT_PROJECT_DIR="web"

# Catch errors and provide feedback
# Passing --clean as the last argument runs `clean_and_exit`
function e_catch {
  PASS=false
  CLEAN=false

  for opt in $@; do
    case $opt in
            0)  PASS=true             ;;
      --clean)  CLEAN=true            ;;
            *)  MESSAGE=${@%%--clean} ;;
    esac
  done;

  if $PASS; then
    echo " âœ“ ... ${MESSAGE:2}"
  else
    echo
    echo " x ... ${MESSAGE:2} failed!"
    $CLEAN && clean_and_exit
    ! $CLEAN && exit 1
  fi
}

function do_exit {
  echo
  echo "Exiting..."
  echo
  exit 1
}

# Cleanup and exit
function clean_and_exit {
  echo
  # Reset httpd-vhosts.conf_original
  conf_do -d
  # Restart Apache
  apachectl restart;
  do_exit
}

# Remove any extra slashed from the path
# Extra slashes could result from improper input
function trim_extra_slashes {
  CLEANED_PROJECT_ROOT=$(echo "$@" | sed 's/\(\/\{2,\}\)/\//g')
}

# Backup and restore the httpd-vhosts.conf
function conf_do {
  if [[ "$@" == "-b" ]] && [[ -r $VHOST_CONF ]] ; then
    # Backup the .conf file
    cp $VHOST_CONF $BAK_FILE
    e_catch $? "httpd-vhosts.conf backup" --clean
  elif [[  "$@" == "-d"  ]] && [[ -r $BAK_FILE ]]; then
    # Restore the .conf file
    cp $BAK_FILE $VHOST_CONF
    # Delete the backup
    rm -f $BAK_FILE
    e_catch $? "httpd-vhosts.conf restore"
  fi
}

if [[ -n $DREAMBOX_USER_NAME && -n $DREAMBOX_SITE_ROOT && -n $DREAMBOX_PROJECT_DIR ]]; then
  # Set variables based on passed ENV variables
  USER_NAME="$DREAMBOX_USER_NAME"
  USER_DIR="$USER_DIR/$USER_NAME"
  SITE_ROOT="$USER_DIR/$DREAMBOX_SITE_ROOT"
  PROJECT_ROOT="/vagrant/$DREAMBOX_PROJECT_DIR"
  CERT_NAME="${DREAMBOX_SITE_NAME}"
else
  do_exit
fi

# Remove any extra slashed from the path
trim_extra_slashes "$PROJECT_ROOT"

echo

# Backup httpd-vhosts.conf
conf_do -b

# Create the SSL certificate
[[ $ENABLE_SSL ]] && source ssl_setup;

# Set Apache directory
ESCAPED_SITE_ROOT=$(echo "$SITE_ROOT" | sed 's/\(\W\)/\\\1/g');
sed -i s/"\/usr\/local\/apache2\/htdocs"/"$ESCAPED_SITE_ROOT"/ $VHOST_CONF;
e_catch $? "httpd-vhosts.conf update" --clean

# ServerName
sed -i s/"\(ServerName\ \)\w*\.\w*"/"\1${DREAMBOX_HOST}/" $VHOST_CONF

# Change ownership to Apache user
chown -R www-data:www-data "$SITE_ROOT"
e_catch $? "Permissions update" --clean

# Restart Apache
/usr/local/apache2/bin/apachectl restart >/dev/null;
e_catch $? "Apache restart"

echo

[[ $? -lt 1 ]] && echo -e "User setup complete.\n"
